{
    "articles": [
      {
        "title": "گیت هاب چیست؟",
        "slug": "what-is-github",
        "description": "گیت هاب روی Git اجرا می‌شود. Git یک سیستم کنترل نسخه است که توسط اسطوره برنامه نویسی ” لینوس توروالد ” ایجاد شده است.",
        "date": "1403.07.03",
        "author": "آزاده شریفی سلطانی",
        "category": "Github",
        "reading_time": "8 min",
        "image": "/images/github/what-is-the-github.jpeg",
        "content": [
          {
            "section_title": "گیت هاب چیست؟",
            "paragraphs": [
              "گیت هاب پلتفرمی است که در آن توسعه دهنگان وب از سراسر جهان در آن گرد هم آمده و با یکدیگر ارتباط و همکاری دارند. در گیت هاب شما به عنوان توسعه دهنده وب می‌توانید پروژه‌های خود را با همکارانتان یا هر فرد دیگری که مایل باشید به اشتراک بگذارید و به صورت مشترک روی یک پروژه کار کنید. به این ترتیب به سادگی می‌توانید نسخه‌های قبلی یک نرم افزار را ارتقا دهید بدون این که تغییر یا اختلالی در نسخه‌های فعلی ایجاد شود.",
              "github کار کردن روی کدها را بسیار ساده کرده است. به کمک این پلتفرم می‌توانید به کوتاه‌ترین و ناپیدا ترین خط کد خود دسترسی پیدا کنید و در صورت لزوم آن را تغییر دهید. اما جذاب‌ترین ویژگی گیت‌هاب این است که به کمک آن می‌توانید با سایر کدنویسان در جهان ارتباط برقرار کنید. تیم بسازید و به‌طور مشترک روی پروژه‌های مختلف کار کنید."
            ]
          },
          {
            "section_title": "مزایای GitHub چیست و چرا از آن استفاده می‌کنیم؟",
            "paragraphs": [
              "مزایای گیت‌هاب بسیار زیاد و دلایلی که به خاطر آن از این پلتفرم استفاده می‌کنیم برای هر کد نویسی متفاوت است. اما اولین دلیلی که کد نویسان جهان را مجبور می‌کند به گیت هاب بپیوندند این است که در آن امکان همکاری نرم وجود دارد. همچنین امکان تست و کنترل نسخه دلیل دیگری است که github را برای کد نویسان جذاب کرده است.",
              "مزیت دیگر گیت هاب این است که امکان یادگیری مباحث جدید و زبان‌های برنامه نویسی تازه در آن فراهم است. کافی است کمی روی آن وقت بگذارید تا ببینید که چه دریای وسیعی از دانش و اطلاعات در آن وجود دارد که فرا گرفتن آن‌ها می‌تواند شما را در حوزه کاریتان تبدیل به یک فرد نخبه کند. این ویژگی که افراد قادرند نسخه خود را با هر کسی که تمایل دارند به اشتراک بگذارند تا مورد بررسی و تحلیل واقع شده و اگر اشکالی در آن وجود دارد رفع شود، جزو جذابیت‌های غیر قابل انکار گیت هاب است. در حال حاضر بسیاری از تیم‌های کد نویسی یا شرکت‌هایی که به‌طور تخصصی در این زمینه کار می‌کنند عضو github هستند و در این پلتفرم پروژه‌های خود را پیش می‌برند."
            ]
          }
        ]
      },
      {
        "title": "ریکت چیست؟",
        "slug": "what-is-react",
        "description": "React.js نوعی کتابخانه منبع باز جاوا اسکریپت است که در ابتدا به وسیله کمپانی متا (فیس‌بوک قبلی) توسعه یافت.",
        "date": "1403.06.19",
        "author": "آزاده شریفی سلطانی",
        "category": "React",
        "reading_time": "5 min",
        "image": "/images/react/what-is-the-react.jpeg",
        "content": [
          {
            "section_title": "ریکت چیست؟",
            "paragraphs": [
              "React.js نوعی کتابخانه منبع باز جاوا اسکریپت است که در ابتدا به وسیله کمپانی متا (فیس‌بوک قبلی) توسعه یافت. هدف اصلی آن تسریع در ایجاد رابط‌های کاربری تعاملی و برنامه‌های کاربردی وب است که به طور قابل‌توجهی میزان کد مورد نیاز را در مقایسه با رویکردهای سنتی جاوا اسکریپت کاهش می‌دهد.",
              "در قلب React مفهومی از ساخت برنامه‌های کاربردی از طریق اجزای قابل استفاده مجدد یا کامپوننت (Component) نهفته است. این مؤلفه‌ها عناصر متمایز رابط نهایی را نشان می‌دهند که وقتی در کنار هم قرار می‌گیرند، کل رابط کاربری برنامه را تشکیل خواهند داد. به عنوان ابزاری حیاتی در برنامه‌های کاربردی وب، ریکت در مدیریت لایه View به کار گرفته می‌شود، دقیقاً مانند “V” در الگوی مدل-view-controller (MVC). در اصل کار اصلی ری اکت تقسیم اجزای سازنده برنامه‌ها به چیزی به نام کامپوننت برای رندر بهتر است. . React با ترکیب سرعت و کارایی جاوا اسکریپت با رویکردی بهینه برای دست‌کاری Document Object Model (DOM)، توسعه‌دهندگان را قادر می‌سازد تا برنامه‌های وب بسیار پویا، واکنشگرا و سریع ایجاد کنند."
            ]
          },
          {
            "section_title": "کاربرد ریکت چیست؟",
            "paragraphs": [
              "ریکت نوعی رویکرد متمایز به الگوهای بارگذاری سنتی صفحه وب ارائه می‌دهد. به‌جای بارگذاری مجدد صفحات در دستگاه کاربر (مرورگر وب یا مشتری) و سرور برای هر درخواست صفحه جدید، React ایجاد برنامه‌های تک‌صفحه‌ای (SPA) را امکان‌پذیر می‌کند. این بدان معناست که تنها یک سند HTML در ابتدا بارگذاری شده و به‌روزرسانی‌های بعدی از طریق جاوا اسکریپت انجام می‌شود.",
              "با اتخاذ مسیریابی سمت کلاینت، React به طور مؤثر بخش‌های خاصی از صفحه وب را بدون ایجاد بارگیری مجدد کامل صفحه به‌روز می‌کند. این رویکرد به طور قابل‌توجهی تجربه کاربر را بهبود می‌بخشد او این ویژگی به‌ویژه برای وب‌سایت‌های مبتنی بر داده که در آن بارگذاری مجدد اضافی صفحات زیاد اتفاق می‌افتد بسیار حیاتی است.",
              "مرکز عملکرد ریکت، DOM مجازی آن محسوب می‌شود که نوعی کپی از DOM واقعی است که ساختار وب‌سایت را منعکس می‌کند. هر زمان که تغییری در وضعیت داده‌ها ایجاد شود، ریکت DOM مجازی را متناسب با آن به‌روزرسانی کرده و DOM واقعی را تنها با تغییرات لازم به‌طور مؤثر اصلاح می‌کند. در نتیجه، کامپوننت‌ها و رابط‌های کاربری React بدون نیاز به بارگذاری مجدد کل صفحه، به سرعت به به‌روزرسانی‌ها پاسخ می‌دهند که منجر به تجربه کاربری روان‌تر و پویاتر می‌شود."
            ]
          }
        ]
      },
      {
        "title": "تیلویند چیست؟",
        "slug": "what-is-tailwindcss",
        "description": "تیلویند، توسط فردی به نام آدام واتان توسعه داده شد و اولین‌بار در سال ۲۰۱۷ منتشر گردید.",
        "date": "1403.06.17",
        "author": "آزاده شریفی سلطانی",
        "category": "Tailwindcss",
        "reading_time": "12 min",
        "image": "/images/tailwind/what-is-the-tailwind.jpeg",
        "content": [
          {
            "section_title": "تیلویند چیست؟",
            "paragraphs": [
              "تیلویند، اولین فریم‌ورک CSS برای ایجاد سریع رابط‌های کاربری سفارشی است. این چارچوب بسیار قابل‌تنظیم می‌باشد و هر چیزی که یک توسعه‌دهنده برای ساخت رابط‌های جذاب نیاز دارد را ارائه می‌دهد. Tailwind CSS می‌تواند از نظر بهینه‌سازی نیز سودمند باشد. استفاده از ابزار PurgeCSS به کاهش حجم فایل کمک می‌کند. شما به‌راحتی می‌توانید این ابزار را با تیلویند راه‌اندازی کنید و CSS استفاده نشده را از فایل حذف نمایید. کار این فریم‌ورک ایجاد کنترل بیشتر بر روی استایل ارائه شده به توسعه‌دهندگان است. این کار نه‌تنها سرعت توسعه را بهبود می‌بخشد، بلکه بهره‌وری را نیز بالا می‌برد."
            ]
          },
          {
            "section_title": "نقاط ضعف تیلویند چیست ؟",
            "paragraphs": [
              "تیلویند مانند هر فریم‌ورک دیگری، دارای معایبی است. نقطه‌ضعف اصلی این فریم‌ورک نشانه‌گذاری نه‌چندان بصری آن می‌باشد. اگرچه به شما کمک می‌کند کد کمتری بنویسید و در زمان خود صرفه‌جویی کنید، ولی گاهی اوقات مرور کد تیلویند می‌تواند خسته‌کننده باشد."
            ]
          },
          {
            "section_title": "مزایای Tailwind CSS:",
            "paragraphs": [
              "استفاده از فریمورک CSS مثل تیلویند مزایای زیادی دارد. در ادامه اکثر آن ها توضیح داده شده ‌اند: کم تر لازم است که شما CSS سفارشی بنویسید. با تیلویند، عناصر را با اعمال کلاس ‌های از قبل موجود مستقیما در‌HTML تان استایل‌ دهی می ‌کنید. با استفاده از کلاس ‌های کاربردی در این روش، می ‌توانید طرح‌ های سفارشی را بدون نوشتن CSS بسازید. شما فایل ‌های CSS را کوچک نگه می ‌دارید. بدون فریمورکی مثل تیلویند، باید هم زمان با افزودن ویژگی ‌ها و مؤلفه‌ های جدید، به نوشتن CSS ادامه بدهید. در نتیجه، فایل ‌های CSS شما سنگین ‌تر می‌ شوند. با استفاده از ابزار هایی مثل نرم ‌افزار Tailwind’s flexbox و ابزار های حاشیه ‌بندی، بیشتر استایل ها قابل استفاده مجدد هستند، بنابراین به ندرت نیاز به نوشتن CSS جدید خواهید داشت . شما مجبور نیستید از خودتان نام کلاس تعریف کنید. با تیلویند شما کلاس ‌ها را از یک سیستم طراحی از پیش تعریف ‌شده انتخاب می ‌کنید. یعنی این که برای انتخاب نام‌ های کلاس خوب برای سبک ‌ها و کامپوننت های خاص به دردسر نمی ‌افتید و لازم نیست موارد پیچیده را به خاطر بسپارید. شما می‌ توانید تغییرات ایمن ‌تری ایجاد کنید. در روش سنتی ، اگر تغییراتی در CSS ایجاد کنید، ممکن است چیزی را در سایت تان دچار مشکل شود. برخلافCSS ، کلاس ‌های ابزار در HTML شما محلی هستند. این یعنی این که می ‌توانید بدون نگرانی در مورد ایجاد تغییر در چیز دیگری در سایت تان، آن ها را تغییر بدهید."
            ]
          }
        ]
      },
      {
        "title": "تایپ اسکریپت چیست؟",
        "slug": "what-is-typescript",
        "description": "تایپ اسکریپت نسخه‌ای از جاوا اسکریپت است که توسط مایکروسافت توسعه‌یافته است.",
        "date": "1403.06.18",
        "author": "آزاده شریفی سلطانی",
        "category": "Typescript",
        "reading_time": "6 min",
        "image": "/images/typescript/what-is-the-typescript.jpeg",
        "content": [
          {
            "section_title": "تایپ اسکریپت چیست؟",
            "paragraphs": [
              "امروزه تایپ اسکریپت یکی از محبوب‌ترین زبان‌های برنامه‌نویسی در جهان به شمار می‌رود و با گذر زمان، افراد بیشتری را به سمت خود جذب می‌کند. با وجود این که زبان تایپ اسکریپت در مقایسه با زبان‌های دیگر نسبتاً جدید به نظر می‌رسد، اما در مدت‌زمان کوتاهی در بین برنامه‌نویسان بسیار پرطرفدار و محبوب شده است.",
              "قبل از اینکه به مزایا و معایب Typescript بپردازیم، باید بدانید که تایپ اسکریپت یک مفهوم مطرح و جدید در دنیای برنامه‌نویسی نیست، بلکه نسخه‌ای از جاوا اسکریپت و مبتنی بر آن است که توسط شرکت مایکروسافت توسعه‌یافته است. با استفاده از تایپ اسکریپت، انواع تایپ متغیر در کد شما قابل معرفی هستند، به‌عبارت‌دیگر، این زبان سعی در افزایش قدرت تایپ برنامه‌های جاوا اسکریپت دارد. نحوه عملکرد تایپ اسکریپ به این‌گونه است که شما می‌توانید کدهای آن را با کامپایلر اجرا و به کد جاوا اسکریپت تبدیل کنید. این زبان برنامه نویسی مبتنی با جاوا اسکریپت، برای گسترش سینتکس و کارایی جاوا اسکریپت طراحی و توسعه داده شده است."
            ]
          },
          {
            "section_title": "تفاوت تایپ اسکریپت و جاوا اسکریپت",
            "paragraphs": [
              "با توجه به اینکه مزیت تایپ اسکریپت نسبت به جاوا اسکریپت ذکر شد، شاید این سؤال برایتان پیش بیاید که به طور کلی تایپ اسکریپت بهتر است یا جاوا اسکریپت؟ در جواب به این سؤال باید گفت که هر دو زبان برنامه‌نویسی در توسعه وب بسیار محبوب هستند. جاوا اسکریپت زبان برنامه نویسی منحصر به فردی است و برای ساخت و توسعه وب‌سایت‌ها طراحی‌شده است و تفاوت‌هایی با سایر زبان‌های برنامه‌نویسی دارد.",
              "یکی از تفاوت‌های مهم بین این دو زبان، این است که در جاوا اسکریپت، کدها به‌صورت پویا و بدون نیاز به تعیین نوع متغیرها نوشته می‌شوند. درصورتی‌که در زبان‌هایی مثل C#، C و Java، نیاز به تعریف تایپ متغیرها وجود دارد. این سبب می‌شود که تایپ های متغیر در جاوا اسکریپت به صورت پویا ایجاد و تعیین شوند، درحالی‌که متغیرهای تایپ‌شده در زبان‌های برنامه‌نویسی دیگر، به‌عنوان متغیرهای ایستا یا از قبل تعریف‌شده شناخته می‌شوند. البته می‌توان گفت زبان تایپ اسکریپت ویژگی‌های جدیدی به جاوا اسکریپت اضافه می‌کند و هرکدام برای کاربرد خاصی عملکردی عالی دارند."
            ]
          }
        ]
      },
      {
        "title": "نکست جی‌اس چیست؟",
        "slug": "what-is-nextjs",
        "description": "Next.js یک فریم‌ورک برای رندرینگ سمت سرور و ساخت اپلیکیشن‌های React است.",
        "date": "1403.06.20",
        "author": "آزاده شریفی سلطانی",
        "category": "Nextjs",
        "reading_time": "8 min",
        "image": "/images/nextjs/what-is-the-next.jpeg",
        "content": [
          {
            "section_title": "فریم‌ورک Next.js چیست؟",
            "paragraphs": [
              "Next.js یک فریم‌ورک رایگان و اوپن‌سورس است که می‌تواند امکانات خوبی را برای کار کردن با کتابخانه‌های ریکت به زبان جاوا اسکریپت در اختیار ما قرار دهد، البته با این تفاوت که بعد از استفاده از ریکت و ایجاد صفحات وب نیتیو، این فریم‌ورک کاری می‌کند که پردازش‌ها در سمت سرور انجام شود و صفحات به صورت استاتیک منتقل شوند. این کار می‌تواند باعث افزایش سرعت شود و در واقع اگر بخواهیم بگوییم وظیفه اصلی Next.js چیست باید گفت که صفحات را با کتابخانه‌های ریکت و با استفاده از امکانات Server-Side Rendering طراحی و ایجاد می‌کند.",
              "خود این فریم‌ورک با استفاده از نود جی اس ساخته شده است و از یک هسته قوی برای رندر کردن‌های سمت سرور خود استفاده می‌کند. البته باید گفت که این رندر کردن و هسته نود جی اس با وجود اینکه روی سرور کار می‌کند اما در اختیار فرانت بوده و بک‌اند ممکن است حتی از زبان دیگری استفاده کند. در واقع اگر بخواهیم بگوییم که از نقطه نظر تکنیکی و جنبه‌های تخصصی ماجرا کار اصلی Next.js چیست باید گفت که یک نیروی پردازشی مجزا را با نود جی اس برای فرانت راه‌اندازی می‌کند که مستقل از بک‌اند سرعت رندر شدن صفحات را بالا برده و یکی از گزینه‌های مورد استفاده و محبوب توسط برنامه‌نویسان حرفه یا برای بهبود اوضاع سئو روی سایت‌های بزرگ است.",
              "این فریم‌ورک برای اولین بار توسط Guillermo Rauch ارائه شد و در حدود 6 سال پیش در سال 2016 به‌عنوان یک پروژه متن‌باز روی گیت هاب عرضه شد و بعد از آن کلیه امتیازات طراحی و توسعه آن، و به نوعی حق کپی رایت آن در اختیار کمپانی Vercel قرار گرفته است. اکنون توسعه این فریم‌روک بر عهده این کمپانی و همین‌طور جامعه کاربری آن می‌باشد که کارهای اصلی آن را انجام می‌دهند و باید گفت که به‌خوبی هم از پس آن بر آمده‌اند.",
              "از زمان انتشار تا الان این فریم‌ورک کار خود را با قدرت انجام داده است و توسعه خوبی را داشته است که در این رابطه باید گفت کمتر فریم‌ورکی را می‌توان تا این اندازه پویا و سریع دید. در ادامه به‌صورت کامل در مورد ورژن‌های مختلف این فریم‌ورک و روندی که برای رسیدن به این نقطه طی کرده است صحبت خواهیم کرد."
            ]
          },
          {
            "section_title": "ویژگی‌های Next.js",
            "paragraphs": [
              "در صورتی که دقت کرده باشید این فریم‌ورک خود یکی از فریم‌ورک‌هایی است که برای کتابخانه‌های دیگری ساخته شده است و در نگاه اول ممکن است قضیه کمی مشکوک به نظر برسد، یک فریم‌ورک برای کار با یک کتابخانه که خود جدا از فریم‌ورک‌های دیگر در حال کار است! البته باید گفت در پس این رفتار تفکر بزرگی در جریان بوده است. در واقع این فریم‌ورک قرار است با استفاده از امکاناتی که کتابخانه‌های ریکت می‌توانند داشته باشند، امکانات بسیار خوب دیگری را برای ما ایجاد کنند. در رابطه با این که هدف از ایجاد Next.JS چیست باید گفت که ویژگی‌های این فریم‌ورک بسیار خاص‌تر از چیزی است که به نظر می‌رسد و باید گفت جداسازی‌هایی که روی فرانت‌اند و بک‌اند یک سایت انجام می‌دهد و ایجاد یک هسته پردازشی مجزا برای فرانت از اصلی‌ترین مواردی است که می‌توان به آنها اشاره کرد.",
              "در مورد ویژگی‌های Next.JS باید گفت که این فریم‌ورک قرار است امکانات پیشرفته‌ای را در شرایط به‌کارگیری از کتابخانه‌های قدرتمند ریکت به خدمت بگیرد و نتیجه آن بالاتر بردن بازدهی سایت طراحی شده می‌باشد و کار به گونه‌ای دنبال خواهد شد که پرترافیک‌ترین سایت‌ها هم بتوانند با استفاده از این فریم‌ورک و ویژگی‌هایی که دارد، به یک سایت سریع تبدیل شوند."
            ]
          }
        ]
      },
      {
        "title": "ریداکس چیست؟",
        "slug": "what-is-redux",
        "description": "ریداکس یک کتابخانه برای مدیریت وضعیت اپلیکیشن‌های جاوا اسکریپت است.",
        "date": "1403.07.09",
        "author": "آزاده شریفی سلطانی",
        "category": "Redux",
        "reading_time": "5 min",
        "image": "/images/redux/what-is-the-redux.jpeg",
        "content": [
          {
            "section_title": "ریداکس چیست؟",
            "paragraphs": [
              "Redux یک کتابخانه جاواسکریپت است که برای ساخت رابط کاربری اپلیکیشن‌ها و صفحات وب استفاده می‌شود. این کتابخانه حالات (states) مختلف را در برنامه‌های جاوا اسکریپت مدیریت می‌کند. حالا منظور از state چیست؟ همانطور که می‌ دانید برنامه‌های کامپیوتری داده‌های خود را در متغیرها ذخیره می‌کنند که هر متغیر مقداری از فضا در حافظه کامپیوتر (RAM) را اشغال به خود اختصاص می‌دهد. به محتوای آن بخش از حافظه، زمانی که نرم افزار در حال اجرا است، وضعیت برنامه نامیده می‌شود. با شناخت State می‌توانیم Redux را بهتر درک کنیم.",
              "ریداکس یک الگو برای مدیریت بهتر و بهینه‌تر وضعیت‌های مختلف در برنامه ارائه می‌دهد. این کتابخانه سن زیادی ندارد و در سال 2015 عرضه شده است. از Redux بیشتر به عنوان یک مکمل در کنار کتابخانه‌هایی مانند Angular یا React استفاده می‌شود. این کتابخانه با تمام وابستگی‌های خود (Dependency) تنها 2 کیلوبایت حجم دارد و با بکارگیری آن، لازم نیست نگران سنگین شدن پروژه خود باشید. همچنین به خاطر متن باز بودن این پروژه، کدهای آن در گیت هاب موجود است و می‌توانید آن را مطالعه کنید."
            ]
          },
          {
            "section_title": "کاربرد فریم‌ورک Redux چیست؟",
            "paragraphs": [
              "تیم توسعه Redux گفته‌اند که این کتابخانه کوتاه‌ترین یا سریع‌ترین راه برای رسیدن به هدف نیست. آن‌ها پیشنهاد می‌کنند زمانی که در پروژه خود به مشکل برخورد کردید به سراغ این کتابخانه بیایید. اگر نیازی به مدیریت حالات نداشتید استفاده از ریداکس ضرورتی ندارد. زیرا نه تنها مشکل را حل نمی‌کند بلکه کار را سخت‌تر و پیچیده‌تر هم خواهد کرد.",
              "اگر با سایر فریم ورک‌های جاوا اسکریپت مانند React کار کرده باشید، می‌دانید که این فریم ورک‌ها خودشان قابلیتی دارند که به کمک آن می‌توانید حالات مختلف را در برنامه مدیریت کنید. توصیه می‌کنیم قبل از یادگیری Redux از همان سیستم‌ها استفاده کنید، چون به احتمال زیاد نیاز شما را برآورده می‌کند و می‌توانید برنامه خود به طور کامل پیاده‌سازی کنید. اما اگر برنامه شما پیچیده است و حین برنامه نویسی به سختی متوجه می‌شوید که حالات کجا ذخیره می‌شوند یا چطور تغییر می‌کنند، ریداکس بهترین کتابخانه موجود است که می‌توانید برای مدیریت States از آن استفاده کنید."
            ]
          }
        ]
      }
    ]
  }